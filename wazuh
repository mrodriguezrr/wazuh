# üìò Wazuh Command Reference

## üîê API Authentication & UUID

```bash
# Get a token (local manager)
TOKEN=$(curl -u wazuh-wui:[pass] -k -X POST "https://localhost:55000/security/user/authenticate?raw=true")

# Confirm API connectivity
curl -k -X GET "https://localhost:55000/" -H "Authorization: Bearer $TOKEN"

# Get Wazuh UUID and version
curl -k -X GET "https://localhost:55000/manager/version/check" -H "Authorization: Bearer $TOKEN"
````

---

## ‚òÅÔ∏è Cloud Token Usage

```bash
# Get token for cloud deployment
TOKEN=$(curl -u <user>:<password> -k -X POST "https://<CloudID>.cloud.wazuh.com/api/wazuh/security/user/authenticate?raw=true")

# Use token to call endpoint
curl -k -X <METHOD> "https://<CloudID>.cloud.wazuh.com/api/wazuh/<ENDPOINT>" -H "Authorization: Bearer $TOKEN"
```

---

## üß™ Cluster Health & Index Allocation

```bash
# Health check
GET _cluster/health
GET _cluster/settings?include_defaults
GET _cat/indices/wazuh-*?h=index
GET _plugins/_ism/explain/wazuh-*

# Explain allocation
GET _cluster/allocation/explain?pretty

# View unassigned shards
GET _cat/shards?h=index,shard,prirep,state,unassigned.reason

# Change index replica settings
PUT /[IDX_NAME]/_settings
{
  "number_of_replicas": 0,
  "index.auto_expand_replicas": false
}
```

---

## üì° Curl Commands (Basic Auth)

```bash
curl -u admin:<pass> -k -X GET "https://localhost:9200/_cluster/health"
curl -u admin:<pass> -k -X GET "https://localhost:9200/_cluster/allocation/explain?pretty"
curl -u admin:<pass> -k -X GET "https://localhost:9200/_cat/shards?h=index,shard,prirep,state,unassigned.reason"

curl -u admin:<pass> -k -X PUT "https://localhost:9200/[IDX_NAME]/_settings" \
  -H 'Content-Type: application/json' \
  -d'{ "index.number_of_replicas" : 0, "index.auto_expand_replicas": false }'

curl -X DELETE "https://localhost:9200/[index-name]" -u admin:<pass> -k
```

---

## üîê Curl With Certs

```bash
curl --cert /etc/wazuh-indexer/certs/admin.pem \
     --key /etc/wazuh-indexer/certs/admin-key.pem \
     -k -X GET "https://localhost:9200/_cluster/health"

curl --cert /etc/wazuh-indexer/certs/admin.pem \
     --key /etc/wazuh-indexer/certs/admin-key.pem \
     -k -X GET "https://localhost:9200/_cat/shards?h=index,shard,prirep,state,unassigned.reason"

curl -k --cert /etc/wazuh-indexer/certs/admin.pem \
         --key /etc/wazuh-indexer/certs/admin-key.pem \
         -X PUT "https://localhost:9200/[IDX_NAME]/_settings" \
         -H 'Content-Type: application/json' \
         -d'{ "index.number_of_replicas": 0, "index.auto_expand_replicas": false }'
```

---

## üì¶ Indexer & Dashboard Plugins

```bash
# Indexer plugins
/usr/share/wazuh-indexer/bin/opensearch-plugin list

# Dashboard plugins
sudo -u wazuh-dashboard /usr/share/wazuh-dashboard/bin/opensearch-dashboards-plugin list
sudo -u wazuh-dashboard /usr/share/wazuh-dashboard/bin/opensearch-dashboards-plugin remove <PLUGIN_NAME>
sudo -u wazuh-dashboard /usr/share/wazuh-dashboard/bin/opensearch-dashboards-plugin install <PLUGIN_NAME>
```

---

## üîÅ Reindexing & Field Changes

```bash
# Check current indices
GET _cat/indices/wazuh-alerts-*

# Add test doc to force field change
POST wazuh-alerts-4.x-2025.06.30/_doc
{
  "timestamp":"2000-01-01T00:00:00.999-0300",
  "data":{"UsedCpuPercent":0.0}
}

# View current template
GET /_template/wazuh?pretty

# Reindex backup
POST _reindex
{
  "source": { "index": "wazuh-alerts-4.x-2025.06.30" },
  "dest":   { "index": "wazuh-alerts-4.x-2025.06.30-backup" }
}

# Delete and restore
DELETE /wazuh-alerts-4.x-2025.06.30-backup

POST _reindex
{
  "source": { "index": "wazuh-alerts-4.x-2025.06.30-backup" },
  "dest":   { "index": "wazuh-alerts-4.x-2025.06.30" }
}
```

---

## ‚öôÔ∏è ISM & Index Policies

```bash
GET _plugins/_ism/explain
GET _plugins/_ism/policies
GET _plugins/_ism/policies/30d_policy?pretty=true
```

---

## üìú Journal & Log Checks

```bash
journalctl -xeu wazuh-dashboard --no-pager | grep -Ei "warn|error"
journalctl -xeu wazuh-indexer --no-pager | grep -Ei "warn|error"

cat /var/log/wazuh-indexer/wazuh-cluster.log | grep -Ei "warn|error"
cat /var/log/filebeat/filebeat* | grep -i "warn|error"
cat /var/ossec/logs/ossec.log | grep -i "warn|error"
```

---

## üíΩ Disk & File Checks

```bash
du -skh /home/ubuntu/* | sort -hr
du / -h --max-depth=1 2>/dev/null

# Generate fake log samples
for i in {1..8}; do echo '[log_sample]' >> /home/ubuntu/test ; done
```

---

## ‚ùå Exclude Wazuh APT Repo

```bash
sed -i "s/^deb/#deb/" /etc/apt/sources.list.d/wazuh.list
apt-get update
```

---

## üîí SSL Cert Info

```bash
openssl x509 -in /etc/wazuh-dashboard/certs/dashboard.pem -noout -text
```

---

## üß™ Port Tests (PowerShell)

```powershell
(new-object Net.Sockets.TcpClient).Connect("<WAZUH_MANAGER_IP>", 1514)
(new-object Net.Sockets.TcpClient).Connect("<WAZUH_MANAGER_IP>", 1515)
(new-object Net.Sockets.TcpClient).Connect("<WAZUH_MANAGER_IP>", 55000)

(new-object Net.Sockets.TcpClient).Connect("60uucs2tvp15.cloud.wazuh.com", 1514)
```

---

## üìù Notes

* Save visualizations and `ossec.conf` before major changes.
* Always snapshot VMs before upgrades.
* Use cert-based curl where possible in production.
* ISM policies apply only to new indices unless manually assigned.
* Use `GET /wazuh-alerts-*/_stats/store` to verify disk usage.

---

